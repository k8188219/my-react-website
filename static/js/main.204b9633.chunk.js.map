{"version":3,"sources":["components/Nav.jsx","components/AlertMessage.jsx","hooks/useInput.js","hooks/useRemoteUpload.js","components/HookRemoteUpload.jsx","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","type","data-toggle","data-target","id","AlertMessage","props","clickHandler","state","show","setState","setTimeout","alertDissmissHandler","getAlertType","error","warning","success","idOfSettimeout","this","clearTimeout","msg","onClick","Component","useInput","initalValue","useState","value","setValue","onChange","e","target","useRemoteUpload","url","bindUrl","resetUrl","name","bindName","resetName","setName","alerts","setAlerts","list","setList","useEffect","console","log","urlParse","exec","filename","decodeURIComponent","i","setInterval","refreshList","window","debug_mode","fetch","credentials","then","res","json","result","clearInterval","body","URLSearchParams","toString","method","headers","prevAlerts","key","Date","getTime","length","index","findIndex","alert","slice","HookRemoteUpload","submitForm","map","action","style","overflow","placeholder","width","Object","keys","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.204b9633.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n      <div className=\"container\">\r\n        <a className=\"navbar-brand\" href=\"/index.html\">\r\n          Remote-Upload\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#collapsibleNavbar\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/index.php\">\r\n                Uploader\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                Link\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                Link\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AlertMessage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: true,\r\n      idOfSettimeout: null\r\n    };\r\n  }\r\n\r\n  clickHandler = () => {\r\n    if (!this.state.show) return;\r\n    this.setState({ show: false });\r\n    setTimeout(this.props.alertDissmissHandler, 150); // for animation\r\n  };\r\n\r\n  getAlertType = () => {\r\n    const { type } = this.props;\r\n    const types = { error: \"alert-danger\", warning: \"alert-warning\", success: \"alert-success\" };\r\n\r\n    return types[type] || \"alert-warning\";\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(this.props.type === \"error\") return\r\n    const idOfSettimeout = setTimeout(this.clickHandler, 3000);\r\n    this.setState({ idOfSettimeout });\r\n  }\r\n  componentWillUnmount() {\r\n    clearTimeout(this.state.idOfSettimeout);\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.state;\r\n    const { msg, type } = this.props;\r\n    return (\r\n      <div className={`alert ${this.getAlertType()} alert-dismissible fade ${show ? \"show\" : \"\"}`}>\r\n        <button type=\"button\" className=\"close\" onClick={this.clickHandler}>\r\n          &times;\r\n        </button>\r\n        <strong>{type || \"warning\"}: </strong>\r\n        {msg}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlertMessage;\r\n","import { useState } from \"react\";\r\n\r\nfunction useInput(initalValue) {\r\n  const [value, setValue] = useState(initalValue);\r\n  const bind = {\r\n      value,\r\n      onChange: e => {\r\n          setValue(e.target.value)\r\n      }\r\n  }\r\n  const reset = () => {\r\n    setValue(initalValue)\r\n  }\r\n\r\n  return[value, bind, reset, setValue]\r\n}\r\n\r\nexport default useInput;\r\n","import { useState, useEffect } from \"react\";\r\nimport useInput from \"./useInput\";\r\n\r\nfunction useRemoteUpload() {\r\n  const [url, bindUrl, resetUrl] = useInput(\"\");\r\n  const [name, bindName, resetName, setName] = useInput(\"\");\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [list, setList] = useState({});\r\n\r\n  const submitForm = () => {\r\n    if (url === \"\" || name === \"\") {\r\n      setAlerts((prevAlerts) => [\r\n        ...prevAlerts,\r\n        {\r\n          key: new Date().getTime() + \"\" + prevAlerts.length,\r\n          msg: \"Please fill in all required fields.\"\r\n        }\r\n      ]);\r\n      return;\r\n    }\r\n\r\n    fetch(\"https://remote-upload.herokuapp.com/\", {\r\n      body: new URLSearchParams({\r\n        url,\r\n        name\r\n      }).toString(),\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: { \"Content-type\": \"application/x-www-form-urlencoded\" }\r\n    }).then(\r\n      (result) => {\r\n        setAlerts((prevAlerts) => [\r\n          ...prevAlerts,\r\n          {\r\n            type: \"success\",\r\n            key: new Date().getTime() + \"\" + prevAlerts.length,\r\n            msg: name + \" add into upload queue.\"\r\n          }\r\n        ]);\r\n      },\r\n      (error) => {\r\n        setAlerts((prevAlerts) => [\r\n          ...prevAlerts,\r\n          {\r\n            type: \"error\",\r\n            key: new Date().getTime() + \"\" + prevAlerts.length,\r\n            msg: \"An error occurred.\"\r\n          }\r\n        ]);\r\n        console.log(error);\r\n      }\r\n    );\r\n    resetUrl();\r\n    resetName();\r\n  };\r\n\r\n  const alertDissmissHandler = (key) => {\r\n    setAlerts((prevAlerts) => {\r\n      const index = prevAlerts.findIndex((alert) => alert.key === key);\r\n      return [...prevAlerts.slice(0, index), ...prevAlerts.slice(index + 1)];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"autoGenerate\");\r\n    const urlParse = /https?:\\/\\/.+[/]([^/?]+).*/.exec(url) || [];\r\n    const filename = decodeURIComponent(urlParse[1] || \"\");\r\n    setName(filename);\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"mount\");\r\n\r\n    const refreshList = () => {\r\n      if (window.debug_mode) return refreshList;\r\n      fetch(\"https://remote-upload.herokuapp.com/?list\", {\r\n        credentials: \"include\"\r\n      })\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            console.log(result);\r\n            setList({ ...result });\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          }\r\n        );\r\n      return refreshList;\r\n    };\r\n    const i = setInterval(refreshList(), 3000);\r\n    return () => {\r\n      clearInterval(i);\r\n    };\r\n  }, []);\r\n\r\n  return [alerts, list, bindUrl, bindName, submitForm, alertDissmissHandler];\r\n}\r\n\r\nexport default useRemoteUpload;\r\n","import React from \"react\";\r\nimport AlertMessage from \"./AlertMessage\";\r\nimport useRemoteUpload from \"../hooks/useRemoteUpload\";\r\n\r\nfunction HookRemoteUpload() {\r\n  const [alerts, list, bindUrl, bindName, submitForm, alertDissmissHandler] = useRemoteUpload();\r\n  return (\r\n    <>\r\n      <div id=\"alertBox\" className=\"floating_alert\">\r\n        {alerts.map((props, i) => (\r\n          <AlertMessage\r\n            alertDissmissHandler={() => {\r\n              alertDissmissHandler(props.key);\r\n            }}\r\n            {...props}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"container\">\r\n        <form action=\"\" method=\"get\" id=\"form\">\r\n          <div className=\"form-row\" style={{ overflow: \"auto\" }}>\r\n            <div className=\"col-md-4 col-sm-6 col-12\">\r\n              <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" placeholder=\"url\" {...bindUrl} />\r\n            </div>\r\n            <div className=\"col-md-2 col-sm-4 col-8\">\r\n              <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" placeholder=\"name\" {...bindName} />\r\n            </div>\r\n            <div className=\"col-md-1 col-sm-2 col-4\">\r\n              <input onClick={submitForm} type=\"button\" className=\"btn btn-primary mb-2\" value=\"Submit\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ width: \"60%\" }}>Name</th>\r\n                <th style={{ width: \"40%\" }}>Progress</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody id=\"list\">\r\n              {Object.keys(list).map((key) => {\r\n                return (\r\n                  <tr key={key}>\r\n                    <td>{key}</td>\r\n                    <td>{list[key]}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HookRemoteUpload;\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"./components/Nav\";\r\nimport HookRemoteUpload from \"./components/HookRemoteUpload\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Nav />\r\n        <div className=\"jumbotron text-center\">\r\n          <h1>Remote-Upload.HerokuApp.Com</h1>\r\n          <p>Upload everything to your Google Drive</p>\r\n        </div>\r\n        <HookRemoteUpload />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}