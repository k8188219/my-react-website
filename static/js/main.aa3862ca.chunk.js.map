{"version":3,"sources":["components/Nav.jsx","components/AlertMessage.jsx","hooks/useInput.js","hooks/useRemoteUpload.js","components/HookRemoteUpload.jsx","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","type","data-toggle","data-target","id","AlertMessage","props","clickHandler","state","show","setState","setTimeout","alertDissmissHandler","this","msg","onClick","Component","useInput","initalValue","useState","value","setValue","onChange","e","target","useRemoteUpload","url","bindUrl","name","bindName","setName","alerts","setAlerts","list","setList","useEffect","console","log","urlParse","exec","filename","decodeURIComponent","i","setInterval","refreshList","window","debug_mode","fetch","credentials","then","res","json","result","error","clearInterval","body","URLSearchParams","toString","method","headers","prevAlerts","timestamp","Date","getTime","length","index","slice","HookRemoteUpload","submitForm","map","key","action","style","overflow","placeholder","width","Object","keys","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.aa3862ca.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n      <div className=\"container\">\r\n        <a className=\"navbar-brand\" href=\"/index.html\">\r\n          Remote-Upload\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#collapsibleNavbar\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/index.php\">\r\n                Uploader\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                Link\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                Link\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AlertMessage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: true,\r\n    };\r\n  }\r\n\r\n  clickHandler = () => {\r\n    if (!this.state.show)\r\n      return\r\n    this.setState({ show: false });\r\n    setTimeout(this.props.alertDissmissHandler, 150); // for animation\r\n  };\r\n  render() {\r\n    const { show } = this.state;\r\n    const { msg } = this.props;\r\n    return (\r\n      <div\r\n        className={`alert alert-warning alert-dismissible fade ${\r\n          show ? \"show\" : \"\"\r\n        }`}\r\n      >\r\n        <button type=\"button\" className=\"close\" onClick={this.clickHandler}>\r\n          &times;\r\n        </button>\r\n        <strong>Warning: </strong>\r\n        {msg}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlertMessage;\r\n","import { useState } from \"react\";\r\n\r\nfunction useInput(initalValue) {\r\n  const [value, setValue] = useState(initalValue);\r\n  const bind = {\r\n      value,\r\n      onChange: e => {\r\n          setValue(e.target.value)\r\n      }\r\n  }\r\n  const reset = () => {\r\n    setValue(initalValue)\r\n  }\r\n\r\n  return[value, bind, reset, setValue]\r\n}\r\n\r\nexport default useInput;\r\n","import { useState, useEffect } from \"react\";\r\nimport useInput from \"./useInput\";\r\n\r\nfunction useRemoteUpload() {\r\n  const [url, bindUrl, resetUrl] = useInput(\"\");\r\n  const [name, bindName, resetName, setName] = useInput(\"\");\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [list, setList] = useState({});\r\n\r\n  const submitForm = () => {\r\n    if (url === \"\" || name === \"\") {\r\n      setAlerts(prevAlerts => [\r\n        ...prevAlerts,\r\n        {\r\n          timestamp: new Date().getTime() + \"\" + prevAlerts.length,\r\n          msg: \"Please fill in all required fields.\",\r\n        },\r\n      ]);\r\n      return;\r\n    }\r\n\r\n    fetch(\"https://remote-upload.herokuapp.com/\", {\r\n      body: new URLSearchParams({\r\n        url,\r\n        name,\r\n      }).toString(),\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: { \"Content-type\": \"application/x-www-form-urlencoded\" },\r\n    }).then(\r\n      result => {\r\n        console.log(result);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const alertDissmissHandler = index => {\r\n    setAlerts(prevAlerts => [\r\n        ...prevAlerts.slice(0, index),\r\n        ...prevAlerts.slice(index + 1),\r\n      ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('autoGenerate')\r\n    const urlParse = /https?:\\/\\/.+[/]([^/?]+).*/.exec(url) || [];\r\n    const filename = decodeURIComponent(urlParse[1] || \"\");\r\n    setName(filename);\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    console.log('mount')\r\n\r\n    const refreshList = () => {\r\n      if (window.debug_mode) return refreshList;\r\n      fetch(\"https://remote-upload.herokuapp.com/?list\", {\r\n        credentials: \"include\",\r\n      })\r\n        .then(res => res.json())\r\n        .then(\r\n          result => {\r\n            console.log(result);\r\n            setList({...result})\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n      return refreshList;\r\n    };\r\n    const i = setInterval(refreshList(), 3000);\r\n    return () => {\r\n      clearInterval(i);\r\n    };\r\n  }, []);\r\n\r\n  return [alerts, list, bindUrl, bindName, submitForm, alertDissmissHandler]\r\n}\r\n\r\nexport default useRemoteUpload;\r\n","import React from \"react\";\r\nimport AlertMessage from \"./AlertMessage\";\r\nimport useRemoteUpload from \"../hooks/useRemoteUpload\";\r\n\r\nfunction HookRemoteUpload() {\r\n  const [\r\n    alerts,\r\n    list,\r\n    bindUrl,\r\n    bindName,\r\n    submitForm,\r\n    alertDissmissHandler,\r\n  ] = useRemoteUpload();\r\n  return (\r\n    <>\r\n      <div id=\"alertBox\" className=\"floating_alert\">\r\n        {alerts.map(({ msg, timestamp }, i) => (\r\n          <AlertMessage\r\n            key={timestamp}\r\n            msg={msg}\r\n            alertDissmissHandler={() => {\r\n              alertDissmissHandler(i);\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"container\">\r\n        <form action=\"\" method=\"get\" id=\"form\">\r\n          <div className=\"form-row\" style={{ overflow: \"auto\" }}>\r\n            <div className=\"col-md-4 col-sm-6 col-12\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2 mr-sm-2\"\r\n                placeholder=\"url\"\r\n                {...bindUrl}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 col-sm-4 col-8\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2 mr-sm-2\"\r\n                placeholder=\"name\"\r\n                {...bindName}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-1 col-sm-2 col-4\">\r\n              <input\r\n                onClick={submitForm}\r\n                type=\"button\"\r\n                className=\"btn btn-primary mb-2\"\r\n                value=\"Submit\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ width: \"60%\" }}>Name</th>\r\n                <th style={{ width: \"40%\" }}>Progress</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody id=\"list\">\r\n              {Object.keys(list).map((key) => {\r\n                return (\r\n                  <tr key={key}>\r\n                    <td>{key}</td>\r\n                    <td>{list[key]}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HookRemoteUpload;\r\n","import React, { Component } from \"react\";\nimport Nav from \"./components/Nav\";\nimport HookRemoteUpload from \"./components/HookRemoteUpload\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Nav />\n        <div className=\"jumbotron text-center\">\n          <h1>Remote-Upload.HerokuApp.Com</h1>\n          <p>Upload everything to your Google Drive</p>\n        </div>\n        <HookRemoteUpload />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}